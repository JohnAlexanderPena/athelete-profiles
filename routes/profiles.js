 const express = require('express');
 const router = express.Router();


 const validateProfileInput = require('../validation/profile')

 /* GET users listing. */



  /**
  * singleprofile controller file * autogenerated by mongoose-scaffold-crud **/

 const Profile = require('../models/Profiles');

  /// POST to profiles/
 router.post('/', (req, res) => {
   const { errors, idValid } = validateProfileInput(req.body)
     if(!req.body) {
       return res.status(400).send('Request Body is missing')
     }


     let profileFields = {social: {}, about: {}, critters: [],charities:[], interests:[], sports: []};

    console.log(req.body)
     if(req.body.name) profileFields.name = req.body.name.toLowerCase();
     if(req.body.birthday) profileFields.birthday = req.body.birthday

     // FIll the profile fields for social

     if(req.body.twitch) profileFields.social.twitch = req.body.twitch;
     if(req.body.youtube) profileFields.social.youtube = req.body.youtube;
     if(req.body.twitter) profileFields.social.twitter = req.body.twitter;
     if(req.body.facebook) profileFields.social.facebook = req.body.facebook;
     if(req.body.instagram) profileFields.social.instagram = req.body.instagram;

     if(req.body.location) profileFields.about.location = req.body.location;
     if(req.body.team) profileFields.about.team = req.body.team;

     // if(req.body.interest) profileFields.interests.interest = req.body.interest;


     if(typeof req.body.pets !== 'undefined') {
        profileFields.pets = req.body.pets.split(',');
     }
     if(typeof req.body.sports !== 'undefined') {
        profileFields.sports = req.body.sports.split(',');
     }
     if(typeof req.body.interests !== 'undefined') {
        profileFields.interests = req.body.interests.split(',');
      }
     if(typeof req.body.charities !== 'undefined') {
        profileFields.charities = req.body.charities.split(',');
      }


     new Profile(profileFields).save()
       .then(doc => {
         if(!doc || doc.length === 0) {
           return res.status(500).send(doc)
         }

         res.status(201).send(doc)
       })
       .catch(err => {
         res.status(500).json(err)
       })
 })


//  router.put(`/profiles/profile`, (req, res) => {
//   if(!req.body.name) {
//     return res.status(400).send('Missing URL Parameter: email')
//   }
//   Customer.findOneAndUpdate({
//     team: req.body.team
//   }, req.body, {
//     new: true
//   })
//     .then(doc => {
//       res.json(doc)
//     })
//     .catch(err => {
//       res.status(500).json(err)
//     })
// })

 // @ route GET routes/profiles/all
 // @description Get all profiles
 // @access Public
 router.get('/all', (req, res, next) => {

   const errors = {};

   Profile.find()
   // .populate('profile', ['name'])
   .then(profiles => {
     if(!profiles) { //if no profiles are found
       errors.noprofile = 'There are no profiles'; // add error into error object
       return res.status(404).json(errors)
     }

     res.json(profiles) // shoe all profiles
   })
   .catch(err => res.status(404).json({ profile: 'There are no profiles'})
     );
 });



 module.exports = router;
